name: Test Extension on LAMP with CiviCRM

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-lamp:
    runs-on: ubuntu-latest

    env:
      CMS_TYPE: drupal # change to "wordpress" to test WordPress instead
      DB_NAME: civicrm
      DB_USER: root
      DB_PASS: root
      DB_HOST: 127.0.0.1
      WEB_ROOT: /var/www/html

    steps:
    - name: Checkout extension repo
      uses: actions/checkout@v4

    - name: Install LAMP Stack
      run: |
        sudo apt update
        sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password password root'
        sudo debconf-set-selections <<< 'mysql-server mysql-server/root_password_again password root'
        sudo apt install -y apache2 mysql-server php php-mysql php-cli php-xml php-gd php-curl php-intl php-zip php-mbstring libapache2-mod-php unzip curl wget git jq

        sudo service apache2 start
        sudo service mysql start

    - name: Create MySQL Database
      run: |
        sudo mysql -u${{ env.DB_USER }} -p${{ env.DB_PASS }} -e "CREATE DATABASE IF NOT EXISTS $DB_NAME DEFAULT CHARACTER SET utf8 COLLATE utf8_unicode_ci;"

    - name: Install Composer
      run: |
        curl -sS https://getcomposer.org/installer | php
        sudo mv composer.phar /usr/local/bin/composer
    
    - name: Globally allow composer patches plugin
      run: |
        mkdir -p $HOME/.config/composer
        echo '{
          "config": {
            "allow-plugins": {
              "cweagans/composer-patches": true
            }
          }
        }' > $HOME/.config/composer/composer.json

    - name: Install CMS (${{ env.CMS_TYPE }})
      run: |
        bash scripts/install-${{ env.CMS_TYPE }}.sh

    - name: Install CiviCRM
      run: |
        bash scripts/install-civicrm.sh ${{ env.CMS_TYPE }}

    - name: Link extension into CMS
      run: |
        bash scripts/link-extension.sh ${{ github.workspace }}

    - name: Install ngrok
      run: |
        curl -s https://ngrok-agent.s3.amazonaws.com/ngrok.asc | sudo tee /etc/apt/trusted.gpg.d/ngrok.asc >/dev/null
        echo "deb https://ngrok-agent.s3.amazonaws.com buster main" | sudo tee /etc/apt/sources.list.d/ngrok.list
        sudo apt update && sudo apt install -y ngrok

    - name: Configure ngrok
      run: ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Expose site with ngrok and show URL
      run: |
        ngrok http 80 > ngrok.log &
        sleep 8
        export NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
        echo "âœ… CMS: ${{ env.CMS_TYPE }} running at $NGROK_URL"
